{"version":3,"sources":["App.js","index.js"],"names":["App","useState","slotsList","setSlotsList","availableSlots","setAvailableSlots","availableSlots45","setavailableSlots45","loading","setLoading","getData","today","moment","format","fetch","baseUrl","then","res","json","list","availableList","availableList45","centers","forEach","sessions","centerRest","session","min_age_limit","available_capacity","data","push","catch","error","console","log","finally","useEffect","fetchInterval","setInterval","clearTimeout","className","length","map","center","name","pincode","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5bd946b.chunk.js","sourcesContent":["/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-03 23:45:24\n * @modify date 2021-05-04 01:22:48\n * @desc [description]\n */\nimport React, { useEffect, useState } from 'react';\nimport moment, { deprecationHandler } from 'moment';\n\nimport './App.css';\n\nfunction App() {\n    const [slotsList, setSlotsList] = useState([]);\n    const [availableSlots, setAvailableSlots] = useState([]);\n    const [availableSlots45, setavailableSlots45] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const getData = () => {\n        setLoading(true);\n        var today = moment().format('DD-MM-YYYY');\n        let baseUrl =\n            'https://cdn-api.co-vin.in/api/v2/appointment/sessions/calendarByDistrict';\n\n        fetch(baseUrl + '?district_id=294&date=' + today)\n            .then((res) => res.json())\n            .then((res) => {\n                let list = [];\n                let availableList = [];\n                let availableList45 = [];\n                res.centers.forEach(({ sessions, ...centerRest }) => {\n                    sessions.forEach((session) => {\n                        let { min_age_limit, available_capacity } = session;\n                        let data = {\n                            ...centerRest,\n                            ...session,\n                        };\n                        if (min_age_limit < 45) {\n                            list.push(data);\n\n                            if (available_capacity > 0) {\n                                availableList.push(data);\n                            }\n                        } else {\n                            list.push(data);\n\n                            if (available_capacity > 0) {\n                                availableList45.push(data);\n                            }\n                        }\n                    });\n                });\n                setSlotsList(list);\n                setavailableSlots45([...availableSlots45, ...availableList45]);\n                setAvailableSlots([...availableSlots, ...availableList]);\n            })\n            .catch((error) => console.log(error))\n            .finally(() => setLoading(false));\n    };\n    useEffect(() => {\n        getData();\n        let fetchInterval = setInterval(() => getData(), 10000);\n        return () => {\n            clearTimeout(fetchInterval);\n        };\n    }, []);\n    return (\n        <div>\n            <div className=\"App-header\">\n                <div className=\"available-container\">\n                    <h2 className=\"title\">Slots Available</h2>\n                    {availableSlots.length === 0 ? (\n                        <div className=\"loader\">No slots available</div>\n                    ) : (\n                        <div>\n                            {availableSlots.map((center) => {\n                                return (\n                                    <div className=\"row\">\n                                        <div>{moment().format('HH:MM:SS')}</div>\n                                        <div>{center.name}</div>\n                                        <div>{center.pincode}</div>\n                                        <div\n                                            className={\n                                                center.available_capacity > 0\n                                                    ? 'green'\n                                                    : 'red'\n                                            }\n                                        >\n                                            {center.available_capacity}\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    )}\n                </div>\n                <div className=\"all-centers-container\">\n                    <h2 className=\"title\">centers for 18+</h2>\n                    {loading ? (\n                        <div className=\"loader\">Fetching data...</div>\n                    ) : (\n                        <div>\n                            {slotsList.map((center) => {\n                                return (\n                                    <div className=\"row\">\n                                        <div>{moment().format('HH:MM:SS')}</div>\n                                        <div>{center.name}</div>\n                                        <div>{center.pincode}</div>\n                                        <div\n                                            className={\n                                                center.available_capacity > 0\n                                                    ? 'green'\n                                                    : 'red'\n                                            }\n                                        >\n                                            {center.available_capacity}\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    )}\n                </div>\n            </div>\n            <div className=\"App-header\">\n                <div className=\"available-container\">\n                    <h2 className=\"title\">Slots Available</h2>\n                    {/* {loading ? (\n                        <div className=\"loader\">Fetching data...</div>\n                    ) : ( */}\n                    <div>\n                        {availableSlots45.map((center) => {\n                            return (\n                                <div className=\"row\">\n                                    <div>{moment().format('HH:MM:SS')}</div>\n                                    <div>{center.name}</div>\n                                    <div>{center.pincode}</div>\n                                    <div\n                                        className={\n                                            center.available_capacity > 0\n                                                ? 'green'\n                                                : 'red'\n                                        }\n                                    >\n                                        {center.available_capacity}\n                                    </div>\n                                </div>\n                            );\n                        })}\n                    </div>\n                    {/* )} */}\n                </div>\n                <div className=\"all-centers-container\">\n                    <h2 className=\"title\">centers for 45+</h2>\n                    {loading ? (\n                        <div className=\"loader\">Fetching data...</div>\n                    ) : (\n                        <div>\n                            {slotsList.map((center) => {\n                                return (\n                                    <div className=\"row\">\n                                        <div>{moment().format('HH:MM:SS')}</div>\n                                        <div>{center.name}</div>\n                                        <div>{center.pincode}</div>\n                                        <div\n                                            className={\n                                                center.available_capacity > 0\n                                                    ? 'green'\n                                                    : 'red'\n                                            }\n                                        >\n                                            {center.available_capacity}\n                                        </div>\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}