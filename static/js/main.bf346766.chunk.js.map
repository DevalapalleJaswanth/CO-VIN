{"version":3,"sources":["App.js","index.js"],"names":["vaccineAvailableVoice","age","console","log","TextToSpeechStream","getVoices","voice","getVoiceByName","pitch","rate","write","renderList","center","className","moment","format","date","vaccine","available_capacity","name","pincode","session_id","App","useState","slotsList18","setSlotsList18","availableSlots18","setAvailableSlots18","slotsList45","setSlotsList45","availableSlots45","setavailableSlots45","loading","setLoading","getData","today","fetch","baseUrl","then","res","json","list18","availableList18","list45","availableList45","centers","forEach","sessions","centerRest","session","min_age_limit","data","push","length","catch","error","finally","useEffect","fetchInterval","setInterval","clearTimeout","map","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf346766.chunk.js","sourcesContent":["/**\n * @author Praveen Reddy\n * @email pr250210@ncr.com\n * @create date 2021-05-03 23:45:24\n * @modify date 2021-05-04 13:34:23\n * @desc [description]\n */\nimport React, { useEffect, useState } from 'react';\nimport moment from 'moment';\nimport TextToSpeechStream from 'text-to-speech-stream';\n\nimport './App.css';\n\nconst vaccineAvailableVoice = (age) => {\n    console.log('Available voice......');\n    TextToSpeechStream.getVoices(); // Return all voice objects\n    var voice = TextToSpeechStream.getVoiceByName('Alex');\n\n    var synthesizer = new TextToSpeechStream({\n        voice: voice,\n        pitch: 1,\n        rate: 1,\n    });\n\n    synthesizer.write('Covid vaccines are available for ' + age);\n};\n\nconst renderList = (center) => {\n    return (\n        <div className=\"row border-line\">\n            <div className=\"updated-time\">{moment().format('HH:MM:SS')}</div>\n\n            <div className=\"column\">\n                <div className=\"row\">\n                    <div>{center.date}</div>\n                    <div>{center.vaccine}</div>\n                    <div\n                        className={\n                            center.available_capacity > 0 ? 'green' : 'red'\n                        }\n                    >\n                        {center.available_capacity}\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div>{center.name}</div>\n                    <div>{center.pincode}</div>\n                    <div>{center.session_id}</div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nfunction App() {\n    const [slotsList18, setSlotsList18] = useState([]);\n    const [availableSlots18, setAvailableSlots18] = useState([]);\n    const [slotsList45, setSlotsList45] = useState([]);\n    const [availableSlots45, setavailableSlots45] = useState([]);\n    const [loading, setLoading] = useState(true);\n\n    const getData = () => {\n        setLoading(true);\n        var today = moment().format('DD-MM-YYYY');\n        let baseUrl =\n            'https://cdn-api.co-vin.in/api/v2/appointment/sessions/calendarByDistrict';\n\n        fetch(baseUrl + '?district_id=294&date=' + today)\n            .then((res) => res.json())\n            .then((res) => {\n                let list18 = [];\n                let availableList18 = [];\n                let list45 = [];\n                let availableList45 = [];\n                res.centers.forEach(({ sessions, ...centerRest }) => {\n                    sessions.forEach((session) => {\n                        let { min_age_limit, available_capacity } = session;\n                        let data = {\n                            ...centerRest,\n                            ...session,\n                        };\n                        if (min_age_limit < 45) {\n                            list18.push(data);\n\n                            if (available_capacity > 0) {\n                                availableList18.push(data);\n                            }\n                        } else {\n                            list45.push(data);\n\n                            if (available_capacity > 0) {\n                                availableList45.push(data);\n                            }\n                        }\n                    });\n                });\n\n                if (availableList18.length > 0) {\n                    vaccineAvailableVoice('18+');\n                }\n\n                if (availableList45.length > 0) {\n                    vaccineAvailableVoice('45+');\n                }\n\n                setSlotsList18(list18);\n                setAvailableSlots18([...availableSlots18, ...availableList18]);\n                setSlotsList45(list45);\n                setavailableSlots45([...availableSlots45, ...availableList45]);\n            })\n            .catch((error) => console.log(error))\n            .finally(() => setLoading(false));\n    };\n    useEffect(() => {\n        getData();\n        let fetchInterval = setInterval(() => getData(), 10000);\n        return () => {\n            clearTimeout(fetchInterval);\n        };\n    }, []);\n    return (\n        <div>\n            <div className=\"App-header\">\n                <div className=\"available-container\">\n                    <h2 className=\"title\">Slots Available</h2>\n                    {availableSlots18.length === 0 ? (\n                        <div className=\"loader\">No slots available</div>\n                    ) : (\n                        <div>{availableSlots18.map(renderList)}</div>\n                    )}\n                </div>\n                <div className=\"all-centers-container\">\n                    <h2 className=\"title\">centers for 18+</h2>\n                    {loading ? (\n                        <div className=\"loader\">Fetching data...</div>\n                    ) : (\n                        <div>{slotsList18.map(renderList)}</div>\n                    )}\n                </div>\n            </div>\n            <div className=\"App-header\">\n                <div className=\"available-container\">\n                    <h2 className=\"title\">Slots Available</h2>\n                    {availableSlots45.length === 0 ? (\n                        <div className=\"loader\">No slots available</div>\n                    ) : (\n                        <div>{availableSlots45.map(renderList)}</div>\n                    )}\n                </div>\n                <div className=\"all-centers-container\">\n                    <h2 className=\"title\">centers for 45+</h2>\n                    {loading ? (\n                        <div className=\"loader\">Fetching data...</div>\n                    ) : (\n                        <div>{slotsList45.map(renderList)}</div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}